#!/usr/bin/env ruby
require 'colorize'

class Archive
  attr_reader :filename
  def initialize(output, command)
    @filename = output
    @cmd = command
  end

  def bytes
    if File.exists?(filename.to_s)
      File.size(filename.to_s)
    else
      0
    end
  end

  def to_s
    "#{@cmd} > #{filename}"
  end
end

class Case
  include Enumerable

  attr_reader :name, :snapshot

  def initialize(name, snapshot)
    @name = name
    @snapshot = snapshot

    @cmds = [
      Archive.new(name, "zfs send #{snapshot}"),
      Archive.new("#{name}.aes.bz2", "openssl aes-256-cbc -a -salt -pass file:#{key_file} -in #{name} | bzip2 -c9"),
      Archive.new("#{name}-zfs.aes.bz2", "zfs send #{snapshot} | openssl aes-256-cbc -a -salt -pass file:#{key_file} | bzip2 -c9"),
      Archive.new("#{name}.aes.pbz2", "openssl aes-256-cbc -a -salt -pass file:#{key_file} -in #{name} | pbzip2 -c9"),
      Archive.new("#{name}-zfs.aes.pbz2", "zfs send #{snapshot} | openssl aes-256-cbc -a -salt -pass file:#{key_file} | pbzip2 -c9"),
      Archive.new("#{name}.bz2.aes.bz2", "bzip2 -c9 #{name} | openssl aes-256-cbc -a -salt -pass file:#{key_file} | bzip2 -9"),
      Archive.new("#{name}-zfs.bz2.aes.bz2", "zfs send #{snapshot} | bzip2 -9 | openssl aes-256-cbc -a -salt -pass file:#{key_file} | bzip2 -9"),
      Archive.new("#{name}.pbz2.aes.pbz2", "pbzip2 -c9 #{name} | openssl aes-256-cbc -a -salt -pass file:#{key_file} | pbzip2 -9"),
      Archive.new("#{name}-zfs.pbz2.aes.pbz2", "zfs send #{snapshot} | pbzip2 -9 | openssl aes-256-cbc -a -salt -pass file:#{key_file} | pbzip2 -9")
    ]
  end

  def each &block
    @cmds.each do |cmd|
      if block_given?
        block.call cmd
      else
        yield cmd
      end
    end
  end

  def key_file
    '/root/.keys/zfs'
  end

  def to_s
    "#{name} => #{snapshot}"
  end
end

datasets = [
  Case.new(:www, "stream/www@zfs-auto-snap_daily-2013-12-20-1132"),
  #Case.new(:mysql, "stream/mysql@zfs-auto-snap_daily-2013-12-20-1132"),
  #Case.new(:git, "pond/home/git@zfs-auto-snap_daily-2013-12-20-1132"),
  #Case.new(:home, "pond/home/lindsey@zfs-auto-snap_daily-2013-12-20-1132")
]

datasets.each do |set|
  puts "#{set}\n".colorize(:red)
  set.each do |cmd|
    puts cmd.to_s.colorize(:light_blue)
    %x(time -p sh -c "#{cmd}")
    puts "[#{cmd.filename}] Bytes: #{cmd.bytes}".colorize(:green)
    puts ""
  end
end
